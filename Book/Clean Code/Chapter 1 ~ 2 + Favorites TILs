Chapter 1 깨끗한 코드
  ."예술에 대한 책을 읽는다고 예술가가 된다는 보장은 없다. 책은 단지 다른 예술가가 사용하는 도구와 기법, 그리고 생각하는 방식을 소개할 뿐이다."(19p)
  .기술의 발전으로 인해 기계가 프로그래머의 역할을 대신할 것이란 기대는 역설적으로 프로그래머의 역할과 책임을 강조한다는 점을 느끼게 되었다.
  컴퓨터를 공부하면 할 수록, 기계가 과연 인간의 두리뭉실한 요구를 명료하게 알아차리고 그에 상응하는 결과를 보여 줄 수 있을지 의문이다. 저자는 강하게 불가능할 것이란
  입장을 가지고 있다.
  .자명한 여러 개발자의 의견들을 적어놓았는데 다양한 미사여구들을 통해 코드를 표현한다는 점이 얼마나 프로그래밍에 정통한 이해를 가지고 있는지 느낄 수 있었다.
  특히 아름답다라는 표현을 사용한 워드 커닝햄의 부분이 가장 인상적이었는데, 언어가 그 역할을 다할때 아름답다라고 표현한 점이 공감됐다.
  
Chapter 2 의미 있는 이름
  .과거에 어떤 책에서 실제 개발자들이 프로그래밍을 하며 가장 고민하는 것들 중 하나가 '네이밍'이라는 내용을 읽은 기억이 있다.
  그만큼 코딩을 하며 변수가 그 역할을 직관적으로 전달 할 수 있도록 디자인 하는 것은 중요하다. 해당 챕터에서는 간단한 예시들을 몇가지 보여주며 우리가 어떤 의도를 가지고
  이름을 지어야 하는지 보여준다.
  
  
  
  <Mission 1>
Favorites TIL from Communitiy (NomadCoder)
  https://nomadcoders.co/community/thread/2394
  책을 읽은 소감을 시로서 표현 부분이 인상적인 TIL이었다. 또한 자신의 좋지 않은 코딩 습관들을 돌아보고 구체적인 예시를 가져온 부분이 본 받을 만한 내용인 것 같다.
  
  https://nomadcoders.co/community/thread/1883
  궁금한 부분에 나와 공통된 내용들이 많아 놀랐다. 책을 읽으며 검색해서 알게되었던 내용 이외에도 더 자세한 설명들이 있어 인상적이었다.
  
  https://nomadcoders.co/community/thread/2213
  영어로 작성되어 원본을 구해 읽었나 하는 호기심이 생겼다. 프로그래밍 언어도 그러하지만, 가끔은 저자의 의도를 더욱 정확히 짚어내기 위해서는 원본을 읽어봐야 한다고 생각한다.
